---

# Default compose file for development and production.
# Should be used directly in development.
# Automatically loads `docker-compose.override.yml` if it exists.
# No extra steps required.
# Should be used together with `docker/docker-compose.prod.yml`
# in production.

version: "3.6"
services:
  rabbitmq:
    image: "rabbitmq:3.8-management-alpine"
    restart: unless-stopped
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    networks:
      - messagenet
    env_file: ./config/.env

  db:
    image: "postgres:12-alpine"
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - webnet
    env_file: ./config/.env

  web:
    <<: &web
      # Image name is changed in production:
      image: "github-repos:dev"
      build:
        target: development_build
        context: .
        dockerfile: ./docker/django/Dockerfile
        args:
          DJANGO_ENV: development
        cache_from:
          - "github-repos:dev"
          - "github-repos:latest"
          - "*"
      volumes:
        - django-static:/var/www/django/static
      depends_on:
        - db
        - rabbitmq
      networks:
        - webnet
        - messagenet
      env_file: ./config/.env
      environment:
        DJANGO_DATABASE_HOST: db
        RABBITMQ_HOST: rabbitmq
      command: >
          bash -c "python manage.py migrate
          && python manage.py runserver 0.0.0.0:8000"


  # This task is an example of how to extend existing ones:
  worker-default:
    <<: *web
    # Processing default queue:
    depends_on:
      - db
      - rabbitmq
      - web
    command: sh ./docker/celery/worker.sh

networks:
  # Network for your internals, use it by default:
  webnet:
  # Network for your async tasks:
  messagenet:

volumes:
  pgdata:
  rabbitmqdata:
  django-static:
